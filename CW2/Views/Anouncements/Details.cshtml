@model CW2.Models.AnouncementDetailView

@{
    ViewBag.Title = "Details";
}

<h2>Announcement</h2>

<div>
    <h4></h4>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(m => m.Announcement.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Announcement.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Announcement.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Announcement.Description)
        </dd>
        @if(ViewContext.HttpContext.User.IsInRole("Lecturer"))
        {
        <dt>
            @Html.DisplayNameFor(model => model.Announcement.CountRe)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Announcement.CountRe)
        </dd>
        }
    </dl>
</div>

@if (ViewContext.HttpContext.User.IsInRole("Lecturer"))
{
    <div class="progressBarSeen">
        <p>Views: @(ViewBag.Seen)%</p>
        <div class ="progress">
            <div class="progress-bar" role="progressbar" style="width:@(Html.AttributeEncode(ViewBag.Seen))%"></div>
        </div>
    </div>
    <div>
        @foreach(var item in ViewBag.NotRead){
            <ul>
                <li>@item.UserName</li>
            </ul>
        }
    </div>
}

<div id = "tableDiv">@Html.Action("BuildTable", new { id = Url.RequestContext.RouteData.Values["id"] })</div>

<div id="createTable">
    @using (Ajax.BeginForm("AJAXCreate", "Comments", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        UpdateTargetId = "tableDiv"
    }))
    {
        <div class="form-group">
            @Html.AntiForgeryToken()
            @Html.LabelFor(model => model.Comment.CommentDes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment.CommentDes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment.CommentDes, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Comment.CompareFig, new { Value = Url.RequestContext.RouteData.Values["id"] })
            </div>
        </div>
    }
</div>



    <br />
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Announcement.Id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>


    @section Scripts{
        <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
        <script src="~/Custom_Scripts/BuildAnounce.js"></script>
        @Scripts.Render("~/bundles/jqueryval")
    }